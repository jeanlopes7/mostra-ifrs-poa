<?php

namespace DoctrineProxies\__CG__\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class ParecerTrabalho extends \Entity\ParecerTrabalho implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function setDatahora($datahora)
    {
        $this->__load();
        return parent::setDatahora($datahora);
    }

    public function getDatahora()
    {
        $this->__load();
        return parent::getDatahora();
    }

    public function setStatus($status)
    {
        $this->__load();
        return parent::setStatus($status);
    }

    public function getStatus()
    {
        $this->__load();
        return parent::getStatus();
    }

    public function setStatusIntroducao($statusIntroducao)
    {
        $this->__load();
        return parent::setStatusIntroducao($statusIntroducao);
    }

    public function getStatusIntroducao()
    {
        $this->__load();
        return parent::getStatusIntroducao();
    }

    public function setStatusObjetivos($statusObjetivos)
    {
        $this->__load();
        return parent::setStatusObjetivos($statusObjetivos);
    }

    public function getStatusObjetivos()
    {
        $this->__load();
        return parent::getStatusObjetivos();
    }

    public function setStatusMetodologia($statusMetodologia)
    {
        $this->__load();
        return parent::setStatusMetodologia($statusMetodologia);
    }

    public function getStatusMetodologia()
    {
        $this->__load();
        return parent::getStatusMetodologia();
    }

    public function setStatusResultados($statusResultados)
    {
        $this->__load();
        return parent::setStatusResultados($statusResultados);
    }

    public function getStatusResultados()
    {
        $this->__load();
        return parent::getStatusResultados();
    }

    public function setObservacoes($observacoes)
    {
        $this->__load();
        return parent::setObservacoes($observacoes);
    }

    public function getObservacoes()
    {
        $this->__load();
        return parent::getObservacoes();
    }

    public function setObservacoesInternas($observacoesInternas)
    {
        $this->__load();
        return parent::setObservacoesInternas($observacoesInternas);
    }

    public function getObservacoesInternas()
    {
        $this->__load();
        return parent::getObservacoesInternas();
    }

    public function setAutorCiente($autorCiente)
    {
        $this->__load();
        return parent::setAutorCiente($autorCiente);
    }

    public function getAutorCiente()
    {
        $this->__load();
        return parent::getAutorCiente();
    }

    public function setObsIntroducao($obsIntroducao)
    {
        $this->__load();
        return parent::setObsIntroducao($obsIntroducao);
    }

    public function getObsIntroducao()
    {
        $this->__load();
        return parent::getObsIntroducao();
    }

    public function setObsObjetivos($obsObjetivos)
    {
        $this->__load();
        return parent::setObsObjetivos($obsObjetivos);
    }

    public function getObsObjetivos()
    {
        $this->__load();
        return parent::getObsObjetivos();
    }

    public function setObsMetodologia($obsMetodologia)
    {
        $this->__load();
        return parent::setObsMetodologia($obsMetodologia);
    }

    public function getObsMetodologia()
    {
        $this->__load();
        return parent::getObsMetodologia();
    }

    public function setObsResultados($obsResultados)
    {
        $this->__load();
        return parent::setObsResultados($obsResultados);
    }

    public function getObsResultados()
    {
        $this->__load();
        return parent::getObsResultados();
    }

    public function setSeq($seq)
    {
        $this->__load();
        return parent::setSeq($seq);
    }

    public function getSeq()
    {
        $this->__load();
        return parent::getSeq();
    }

    public function setFkTrabalho(\Entity\Trabalho $fkTrabalho)
    {
        $this->__load();
        return parent::setFkTrabalho($fkTrabalho);
    }

    public function getTrabalho()
    {
        $this->__load();
        return parent::getTrabalho();
    }

    public function setFkRevisor(\Entity\Revisor $revisor = NULL)
    {
        $this->__load();
        return parent::setFkRevisor($revisor);
    }

    public function getRevisor()
    {
        $this->__load();
        return parent::getRevisor();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'datahora', 'status', 'statusIntroducao', 'statusObjetivos', 'statusMetodologia', 'statusResultados', 'observacoes', 'observacoesInternas', 'autorCiente', 'obsIntroducao', 'obsObjetivos', 'obsMetodologia', 'obsResultados', 'sequencia', 'trabalho', 'revisor');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}